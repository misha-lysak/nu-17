{"ast":null,"code":"var _jsxFileName = \"/home/m.lysak/Desktop/app/nu-17/src/components/Numbers/Numbers.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport './numbers.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Numbers = () => {\n  _s();\n\n  const [number, setNumber] = React.useState(1);\n  React.useEffect(() => {\n    const count = setTimeout(() => {\n      setNumber(value => {\n        if (value !== 17) {\n          return value + 1;\n        }\n      });\n    }, 100);\n    return () => {\n      clearInterval(count);\n    };\n  }, [number]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'numbers-wrapper',\n    children: number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Numbers, \"9VpGhAAIUyvHE9bNkqGESSDw7F0=\");\n\n_c = Numbers;\nexport { Numbers };\n\nvar _c;\n\n$RefreshReg$(_c, \"Numbers\");","map":{"version":3,"sources":["/home/m.lysak/Desktop/app/nu-17/src/components/Numbers/Numbers.tsx"],"names":["React","Numbers","number","setNumber","useState","useEffect","count","setTimeout","value","clearInterval"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,KAAK,CAACI,QAAN,CAAe,CAAf,CAA5B;AAEAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpB,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BJ,MAAAA,SAAS,CAAEK,KAAD,IAAW;AACnB,YAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB,iBAAOA,KAAK,GAAG,CAAf;AACD;AACF,OAJQ,CAAT;AAKD,KANuB,EAMrB,GANqB,CAAxB;AAQA,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD,KAFD;AAGD,GAZD,EAYG,CAACJ,MAAD,CAZH;AAcA,sBAAO;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA,cAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;GAAMD,O;;KAAAA,O;AAoBN,SAASA,OAAT","sourcesContent":["import * as React from 'react';\nimport './numbers.scss';\n\nconst Numbers: React.FC = () => {\n  const [number, setNumber] = React.useState(1);\n\n  React.useEffect(() => {\n    const count = setTimeout(() => {\n      setNumber((value) => {\n        if (value !== 17) {\n          return value + 1;\n        }\n      });\n    }, 100);\n\n    return () => {\n      clearInterval(count);\n    };\n  }, [number]);\n\n  return <div className={'numbers-wrapper'}>{number}</div>;\n};\n\nexport { Numbers };\n"]},"metadata":{},"sourceType":"module"}